<?php
require_once( BEMAVERICK_COMMON_ROOT_DIR . '/lib/Stream.php' );
$input = $this->input;
$site = $this->site;

// Input Fields
$streamId = $input->streamId ? $input->streamId : null;
$stream = isset( $streamId ) ? $site->getStream( $streamId ) : null;
$definition = $stream->getDefinition();
$delay = $definition['logic']['delay'] ?? BeMaverick_Stream::DEFAULT_DELAY;
$responseStatus = BeMaverick_Response::RESPONSE_STATUS_ACTIVE;
$challengeId = $definition['challengeId'] ?? false;

$formatFormBootstrap = $this->formatFormBootstrap2();

$filterBy = array(
    'responseStatus' => $responseStatus,
    'delay' => $delay,
);
if ($challengeId) 
    $filterBy['challengeId'] = $challengeId;
$sortBy = array(
    'sort' => 'createdTimestamp',
    'sortOrder' => 'desc',
);
$count = $definition['logic']['displayLimit'] ?? BeMaverick_Stream::DEFAULT_DISPLAY_LIMIT;
$offset = 0;
$responses = $site->getResponses($filterBy, $sortBy, $count, $offset);

$hiddenFields = array(
    $formatFormBootstrap->getHiddenSimple( 'streamId', $streamId ),
);

// set the table data
$columns = array( 
    'responseIdWithHiddenInput', 
    'responseStatus', 
    'responseVideoThumbnail', 
    'responseUsername', 
    'responseChallengeTitle', 
    'responseCreatedTimestamp', 
    'responseHideFromStreams', 
    'responseAction' 
);

$columnInfo = $this->getTableInfo()->getColumnInfo( $columns );

$tableInitVars = array(
    'columns' => $columns,
    'columnInfo' => $columnInfo,
    'rowIdPrefix' => 'response',
    'dontUseGroups' => true,
    'tableAttributes' => array( 'class' => 'table table-striped table-bordered' ),
);

$tableDataInput = array();

$allowDuplicates = true;
$tableData = $this->getTableData( $responses, $columns, $tableDataInput, $allowDuplicates );
// die("<pre>tableData ".print_r($tableData, true)."</pre>");


$tableInitVars['rows'] = array_keys( $tableData );

$table = $this->table( $tableData, $tableInitVars );

// Stream Settings Forms
$streamSettingsForm = isset( $stream ) ? $formatFormBootstrap->getStreamSettingsForm( $stream ) : false;
$streamChallengeForm = isset( $stream ) ? $formatFormBootstrap->getStreamChallengeForm( $stream ) : false;

?>

<h1 class="page-header">Edit Latest Responses Stream</h1>

<?php if (!$streamId) : ?>
    <div class="button-bars">
        <div class="button-bar--filter button-bar">
            <form method="post" action="<?php print $this->url( 'streamsLatestResponsesEdit' ) ?>">
                <div class="filter">
                    <?php
                    $formItems = array();
                    $formItems[] = $formatFormBootstrap->getFeaturedType( $featuredType, null, 'response', $streamId );
                    print $formatFormBootstrap->getList( $formItems );
                    ?>
                </div>
            </form>
        </div>
    </div>
<?php endif; ?>

<form method="get" action="<?php print $this->url( 'streamsLatestResponsesEditConfirm' ); ?>" >
    <div style='display: block; float: right;'>
        <?php
        $formItems = array();
        $formItems[] = $formatFormBootstrap->getButtons( array( array( 'text' => '<span class="glyphicon glyphicon-floppy-disk"></span>&nbsp; Save Stream', 'style' => 'btn btn-success' ) ), $formatFormBootstrap->getDefaultButtonsOptions() );
        print $formatFormBootstrap->getList( $formItems );
        ?>
    </div>

    <?php /** Hidden Fields */ ?>
    <?php foreach($hiddenFields as $hiddenField) { print $hiddenField; } ?>


    <?php /** Stream Forms */ ?>
    <?php print $streamSettingsForm; ?>
    <?php print $streamChallengeForm; ?>
    
    <?php /** Manage Responses */ ?>
    <div class="bd">
        <h3>Responses</h3>
        <p>Showing the most recent responses</p>

        <?php /** Responses Table */ ?>
        <div class="table-responsive table-display-limit">
            <?php print $table; ?>
        </div>

        <?php
        $formItems = array();
        $formItems[] = $formatFormBootstrap->getButtons( array( array( 'text' => '<span class="glyphicon glyphicon-floppy-disk"></span>&nbsp; Save Stream', 'style' => 'btn btn-success' ) ), $formatFormBootstrap->getDefaultButtonsOptions() );
        print $formatFormBootstrap->getList( $formItems );
        ?>
    </div>
</form>
