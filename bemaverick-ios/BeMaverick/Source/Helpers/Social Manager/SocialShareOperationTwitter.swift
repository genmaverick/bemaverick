//
//  SocialShareOperationTwitter.swift
//  Maverick
//
//  Created by David McGraw on 4/18/18.
//  Copyright ¬© 2018 BeMaverick. All rights reserved.
//

import Foundation
import TwitterKit

/**
 Token Note: User and application authentication tokens do not expire, but those
 generated by guest authentication do. Twitter Kit will automatically retry once
 on token expiration.
 */
class SocialShareOperationTwitter: SocialShareOperation {
    
    // MARK: - Public Methods
    
    deinit {
        log.verbose("üí•")
    }
    
    required init(channel: SocialShareChannels = .twitter) {
        super.init(channel: channel)
    }
    
    /**
     Determine if the user is authorized to share through Twitter
     */
    override func isShareAvailable() -> Bool {
        return TWTRTwitter.sharedInstance().sessionStore.hasLoggedInUsers()
    }
    
    /**
     Use the built-in share experience
     */
    override func share(fromViewController vc: UIViewController) {
        
        guard let url = URL(string: shareUrlPath) else { return }
        
        if isPending { return }
        isPending = true
        
        let composer = TWTRComposer()
        composer.setText("\(self.shareText)")
        composer.setURL(url)
        composer.show(from: vc, completion: nil)
        
    }
    
    /**
     Begin the login flow using Twitter Login Kit
     */
    override func login(fromViewController vc: UIViewController,
                        readOnly: Bool = false,
                        completionHandler: @escaping (_ error: MaverickError?) -> Void)
    {
        
        TWTRTwitter.sharedInstance().logIn(completion: { (session, error) in
            
            if let error = error {
                completionHandler(MaverickError.shareFailed(reason: .unknownError(message: error.localizedDescription)))
                return
            }
            
            completionHandler(nil)
            
        })
        
    }

    // MARK: - Operation
    
    /**
     TwitterKit needs to be executed on the main thread...
    */
    override func main() {
        
        super.main()
        
        DispatchQueue.main.async {
        
            guard let userId = TWTRTwitter.sharedInstance().sessionStore.session()?.userID else {
                
                self.executing(false)
                self.finish(true)
                return
                
            }
            
            let client      = TWTRAPIClient(userID: userId)
            let shareText   = "\(self.shareText) \(self.shareUrlPath)"
            
            client.sendTweet(withText: shareText, completion: { tweet, error in
                
                if let error = error {
                    log.verbose("üë®‚Äçüë®‚Äçüëß‚Äçüëß Twitter share operation failed: \(error.localizedDescription)")
                    return
                }
                
                self.executing(false)
                self.finish(true)
                
            })

        }
        
    }
    
}
